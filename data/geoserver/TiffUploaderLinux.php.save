require_once ('../../Config.php');
include "GeoserverWrapper.php";
class PublishGeoserverTifLayer {
    function listFiles ($component, $level){
        $path = "C:\Program Files (x86)\GeoServer 2.5.5.1\data_dir\data\vulnerabilitytool\malawi/".$level."/".$component;
        $fileNames=[];
        if (file_exists($path.'/')) {
            $matches=array();
            $pattern = '/^.*\.(tif)$/i';

            foreach (new DirectoryIterator($path.'/') as $folderInfo) {
                if (!$folderInfo->isDot() && $folderInfo->isFile()) {
                    preg_match($pattern, $folderInfo->getFileName(), $matches);
                    if ($matches) {
                        $fileNames[] = $folderInfo->getFilename();
                    }
                }
            }
        }
        return $fileNames;

    }


    function publishTiffLayer($fileName, $workspaceName, $component, $level) {
        $config = new Config();
        $geoserver = new GeoserverWrapper($config->geoserverUrl, $config->geoserverUsername, $config->geoserverPassword);
        $datastoreName = substr($fileName, 0, -4);
        $location = 'data/vulnerabilitytool/malawi/'.$level.'/'.$component.'/'.$fileName;
        $layerName = $datastoreName;
       $geoserver->createTiffDirDataStore($datastoreName, $workspaceName, $location, $component);
        $geoserver->createTifLayer($layerName, $workspaceName, $datastoreName);
        $geoserver->addStyleToTifLayer($layerName, $workspaceName,  'vulnerabilitytool_raster_default_gradient');
    }
}


////Batch upload
$publish= new PublishGeoserverTifLayer();
$components = ['exposure', 'sensitivity', 'lack_of_adaptive_capacity', 'vulnerability'];
$levels= ['national'];
foreach ($levels as $level) {
    foreach ($components as $component) {
        $names = $publish->listFiles($component, $level);
        foreach ($names as $filename) {
            $publish->publishTiffLayer($filename, 'malawi_vulnerabilitytool', $component, $level);
        }
    }
}
<?php
require_once ('../../Config.php');
include "GeoserverWrapper.php";
class PublishGeoserverTifLayer {
    function listFiles ($component, $level){
        $path = "C:\Program Files (x86)\GeoServer 2.5.5.1\data_dir\data\vulnerabilitytool\malawi/".$level."/".$component;
        $fileNames=[];
        if (file_exists($path.'/')) {
            $matches=array();
            $pattern = '/^.*\.(tif)$/i';

            foreach (new DirectoryIterator($path.'/') as $folderInfo) {
                if (!$folderInfo->isDot() && $folderInfo->isFile()) {
                    preg_match($pattern, $folderInfo->getFileName(), $matches);
                    if ($matches) {
                        $fileNames[] = $folderInfo->getFilename();
                    }
                }
            }
        }
        return $fileNames;

    }


    function publishTiffLayer($fileName, $workspaceName, $component, $level) {
        $config = new Config();
        $geoserver = new GeoserverWrapper($config->geoserverUrl, $config->geoserverUsername, $config->geoserverPassword);
        $datastoreName = substr($fileName, 0, -4);
        $location = 'data/vulnerabilitytool/malawi/'.$level.'/'.$component.'/'.$fileName;
        $layerName = $datastoreName;
       $geoserver->createTiffDirDataStore($datastoreName, $workspaceName, $location, $component);
        $geoserver->createTifLayer($layerName, $workspaceName, $datastoreName);
        $geoserver->addStyleToTifLayer($layerName, $workspaceName,  'vulnerabilitytool_raster_default_gradient');
    }
}


////Batch upload
$publish= new PublishGeoserverTifLayer();
$components = ['exposure', 'sensitivity', 'lack_of_adaptive_capacity', 'vulnerability'];
$levels= ['national'];
foreach ($levels as $level) {
    foreach ($components as $component) {
        $names = $publish->listFiles($component, $level);
        foreach ($names as $filename) {
            $publish->publishTiffLayer($filename, 'malawi_vulnerabilitytool', $component, $level);
        }
    }
}

//Single Upload
//$publish->publishTiffLayer('malawi_national_education_level_of_mother.tif', 'malawi_vulnerabilitytool', 'sensitivity', 'national');
