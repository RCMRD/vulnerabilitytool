<?php
require_once ('../../Config.php');
include "GeoserverWrapper.php";
class PublishGeoserverTifLayer {
    function listFiles (){
        //$path = "C:/xampp/tomcat/webapps/geoserver/data/data/vulnerabilitytool/boundaries";
       $path = "/var/lib/tomcat7/webapps/geoserver/data/data/vulnerabilitytool/boundaries";
        $fileNames=[];
        if (file_exists($path.'/')) {
            $matches=array();
            $pattern = '/^.*\.(shp)$/i';

            foreach (new DirectoryIterator($path.'/') as $folderInfo) {
                if (!$folderInfo->isDot() && $folderInfo->isFile()) {
                    preg_match($pattern, $folderInfo->getFileName(), $matches);
                    if ($matches) {
                        $fileNames[] = $folderInfo->getFilename();
                    }
                }
            }
        }
        return $fileNames;

    }


    function publishShpLayer($fileName, $workspaceName) {
        $config = new Config();
        $geoserver = new GeoserverWrapper($config->geoserverUrl, $config->geoserverUsername, $config->geoserverPassword);
        $datastoreName = substr($fileName, 0, -4);
        $location = 'data/vulnerabilitytool/boundaries/'.$fileName;
        $layerName = $datastoreName;
        $geoserver->createShpDirDataStore($datastoreName, $workspaceName, $location);
        $geoserver->createLayer($layerName, $workspaceName, $datastoreName, $description = '');
        $geoserver->addStyleToTifLayer($layerName, $workspaceName,  'district_boundaries');
    }
}


////Batch upload
$publish= new PublishGeoserverTifLayer();
$components = ['exposure', 'sensitivity', 'lack_of_adaptive_capacity', 'vulnerability'];
$levels= ['phalombe'];

$names = $publish->listFiles();
foreach ($names as $filename) {
    $publish->publishShpLayer($filename, 'malawi_vulnerabilitytool');
}
