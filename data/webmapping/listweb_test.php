<?php
$shp = "SHAPE-ZIP";
$kml="application/vnd.google-earth.kml+xml";
$geojson="application/json";
$csv="csv";
$gml32="application/gml+xml;%20version=3.2";
$geotiff="image%2Fgeotiff";
$pdf="application%2Fpdf";
$png="image%2Fpng";
$jsonArray = [];
function web_export($workspace, $layer, $numberOfFeatures, $format, $extension, $width, $height) {
    $geoserverWFS = "http://192.168.0.89:8080/geoserver/".$workspace."/ows?service=WFS&version=1.0.0&request=GetFeature";
    $geoserverWMS = "http://192.168.0.89:8080/geoserver/".$workspace."/wms?service=WMS&version=1.1.0&request=GetMap";
    $WMSLayerName = "&layers=" . $workspace . ':' . $layer;
    $WFSLayerName = "&typeName=" . $workspace . ':' . $layer;
    $WFSMaxFeatures = "&maxFeatures=" . $numberOfFeatures;
    $WFSOutputFormat = "&outputFormat=" . $format;
    $WMSFormat = "&format=" . $format;
    $WMSBBox = "&bbox=32.6666870117188,-17.125,35.9566870117187,-9.335";
    $WMSWidth = "&width=" . $width;
    $WMSHeight = "&height=" . $height;
    $WMSSRS = "&srs=EPSG:4326";
    $WFSLink = $geoserverWFS . $WFSLayerName . $WFSMaxFeatures . $WFSOutputFormat;
    $WMSLink = $geoserverWMS . $WMSLayerName . $WMSBBox . $WMSWidth . $WMSHeight . $WMSSRS . $WMSFormat;

    $WFSFormats = ["shp"=> "SHAPE-ZIP","kml"=>"application/vnd.google-earth.kml+xml", "gml"=>"application/gml+xml;%20version=3.2", "geojson"=>"application/json", "csv"=>"csv"];
    $WMSFormats = ["geotiff"=>"image%2Fgeotiff", "pdf"=>"application%2Fpdf", "png"=>"image%2Fpng", ];
    if ($width == "") {//If width is '' then the format is wfs so use wfslink
        $jsonArray[] = array (
	        'name'=> $layer,
	        'filename'=> $workspace . '-' . $layer.'.'. $extension,
	        //format:$format,
	        'size'=> "",
	        'link'=> '<a class="download_button" href='.$WFSLink.' download/>Download</a>'
    	);
    }
    else if ($numberOfFeatures=="") {//If numberOfFeatures is '' then the format is wms so use wmslink
        $jsonArray[] = array (
	        'name'=> $layer,
	        'filename'=> $workspace . '-' . $layer.'.'. $extension,
	        //format:$format,
	        'size'=> "",
	        'link'=> '<a class="download_button" href='.$WMSLink.' download/>Download</a>'
    	);
    }
    else {

    	foreach ($WFSFormats as $key => $value) {
            $WFSLinks =  $geoserverWFS . $WFSLayerName . $WFSMaxFeatures.  "&outputFormat=" . $value;
            $jsonArray[] = array (
                    'name'=> $layer,
                    'filename'=> $workspace . '-' . $layer.'.'.$key,
                    //format:$key,
                    'size'=> "",
                    'link'=> '<a class="download_button" href='.$WFSLinks.' download>Download</a>'
                );

        }

        foreach ($WMSFormats as $key => $value) {
            $WMSLinks = $geoserverWMS.$WMSLayerName.$WMSBBox.$WMSWidth.$WMSHeight.$WMSSRS."&format=".$value;
            $jsonArray[] = array (
                'name'=> $layer,
                'filename'=> $workspace . '-' . $layer.'.'.$key,
                //format:$key,
                'size'=> "",
                'link'=> '<a class="download_button" href='.$WMSLinks.' download>Download</a>'
            );
        }
    }

 echo json_encode($jsonArray, JSON_UNESCAPED_SLASHES);
}

//web_export("topp", "default_vw_vulnerability_index", 100000, $shp,"shp", "", "");
//echo "<br>"; //WFS
//web_export("topp", "default_vw_vulnerability_index", "", $geotiff, "geotiff", 1920, 825);
//echo "<br>"; //WMS
//web_export("topp", "default_vw_vulnerability_index", 100000, '', "", 1920, 825);
//echo "<br>"; //All
//console.log(JSON.stringify(jsonArray));

//function getInnerExtension($filename) {
//    if (strpos($filename, "shp")!== false){
//        return "shp";
//    }
//    else if (strpos($filename, "tif")!== false){
//        return "tif";
//    }
//    else{
//       return pathinfo($filename, PATHINFO_EXTENSION);
//    }
//}
//if (strpos('vl8kiava9rifdn23h0s6a2glmc6_salima_e_e25_s33_a42','malawi') !== true){
//    echo 'true';
//    //$Name = substr($layer, $sizeOfRemoveNames+1);
//}
//else{
//    echo 'false';
//}
//
//function formatDescription ($string){
//    $nameArry = explode('_', $string);
//    $capitalizedCountry = ucwords($nameArry[0]);
//    $capitalizedAdminLevel = ucwords($nameArry[1]);
//    $cut = strlen($nameArry[0]) + strlen($nameArry[1]) + 2;
//
//    $finalStringSmall = str_replace('_', " ", $string);
//    $finalStringCapital0 = str_replace($nameArry[0], $capitalizedCountry, substr($finalStringSmall, $cut));
//    $finalStringCapital1 = str_replace($nameArry[1], $capitalizedAdminLevel, $finalStringCapital0);
//    $finalString = $capitalizedCountry.' '. $capitalizedAdminLevel.' '. $finalStringCapital1;
//    echo $finalString;
//}
//
//formatDescription('malawi_national_coefficient_of_variation_of_precipitation');


define( 'ROOT_DIR', __FILE__ );

echo ROOT_DIR;


echo getcwd();

$exc = exec('pgsql2shp -f "../downloads/national/vulnerability/testshp.shp" -h localhost -u postgres -P postgres  vulnerabilitytool "SELECT * FROM malawi_national_exposure"  2>&1', $output, $return);
print_r( $output);
echo $return;

/**
 *
 */