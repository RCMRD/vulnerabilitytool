Ext.define("Ext.data.association.BelongsTo",{extend:"Ext.data.association.Association",alternateClassName:"Ext.data.BelongsToAssociation",alias:"association.belongsto",constructor:function(){this.callParent(arguments);var n=this,i=n.ownerModel.prototype,t=n.associatedName,r=n.getterName||"get"+t,u=n.setterName||"set"+t;Ext.applyIf(n,{name:t,foreignKey:t.toLowerCase()+"_id",instanceName:t+"BelongsToInstance",associationKey:t.toLowerCase()});i[r]=n.createGetter();i[u]=n.createSetter()},createSetter:function(){var t=this,i=t.foreignKey,n=t.instanceName;return function(t,r,u){var f=t&&t.isModel,e=f?t.getId():t;return f?this[n]=t:this[n]instanceof Ext.data.Model&&!this.isEqual(this.get(i),e)&&delete this[n],this.set(i,e),Ext.isFunction(r)&&(r={callback:r,scope:u||this}),Ext.isObject(r)?this.save(r):void 0}},createGetter:function(){var n=this,i=n.associatedName,r=n.associatedModel,u=n.foreignKey,f=n.primaryKey,t=n.instanceName;return function(n,e){n=n||{};var o=this,l=o.get(u),c,s,h;return n.reload===!0||o[t]===undefined?(s=Ext.ModelManager.create({},i),s.set(f,l),typeof n=="function"&&(n={callback:n,scope:e||o}),c=n.success,n.success=function(n){o[t]=n;c&&c.apply(this,arguments)},r.load(l,n),o[t]=s,s):(s=o[t],h=[s],e=e||n.scope||o,Ext.callback(n,e,h),Ext.callback(n.success,e,h),Ext.callback(n.failure,e,h),Ext.callback(n.callback,e,h),s)}},read:function(n,t,i){n[this.instanceName]=t.read([i]).records[0]}})