Ext.define("Ext.data.association.HasMany",{extend:"Ext.data.association.Association",alternateClassName:"Ext.data.HasManyAssociation",requires:["Ext.util.Inflector"],alias:"association.hasmany",constructor:function(){var n=this,i,t;n.callParent(arguments);n.name=n.name||Ext.util.Inflector.pluralize(n.associatedName.toLowerCase());i=n.ownerModel.prototype;t=n.name;Ext.applyIf(n,{storeName:t+"Store",foreignKey:n.ownerName.toLowerCase()+"_id"});i[t]=n.createStore()},createStore:function(){var n=this,f=n.associatedModel,t=n.storeName,r=n.foreignKey,u=n.primaryKey,i=n.filterProperty,e=n.autoLoad,o=n.storeConfig||{};return function(){var n=this,s,h,c={};return n[t]===undefined&&(h=i?{property:i,value:n.get(i),exactMatch:!0}:{property:r,value:n.get(u),exactMatch:!0},c[r]=n.get(u),s=Ext.apply({},o,{model:f,filters:[h],remoteFilter:!1,modelDefaults:c,disableMetaChangeEvent:!0}),n[t]=Ext.data.AbstractStore.create(s),e&&n[t].load()),n[t]}},read:function(n,t,i){var e=n[this.name](),u,f,o,r;if(e.add(t.read(i).records),u=this.associatedModel.prototype.associations.findBy(function(t){return t.type==="belongsTo"&&t.associatedName===n.$className}),u)for(f=e.data.items,o=f.length,r=0;r<o;r++)f[r][u.instanceName]=n}})