Ext.define("Ext.data.association.Association",{alternateClassName:"Ext.data.Association",primaryKey:"id",associationKeyFunction:null,defaultReaderType:"json",isAssociation:!0,initialConfig:null,statics:{AUTO_ID:1e3,create:function(n){Ext.isString(n)&&(n={type:n});switch(n.type){case"belongsTo":return new Ext.data.association.BelongsTo(n);case"hasMany":return new Ext.data.association.HasMany(n);case"hasOne":return new Ext.data.association.HasOne(n);default:Ext.Error.raise('Unknown Association type: "'+n.type+'"')}return n}},constructor:function(n){Ext.apply(this,n);var t=this,e=Ext.ModelManager.types,i=n.ownerModel,r=n.associatedModel,o=e[i],s=e[r],u=n.associationKey,f;u&&(f=String(u).search(/[\[\.]/),f>=0&&(t.associationKeyFunction=Ext.functionFactory("obj","return obj"+(f>0?".":"")+u)));t.initialConfig=n;o===undefined&&Ext.Error.raise("The configured ownerModel was not valid (you tried "+i+")");s===undefined&&Ext.Error.raise("The configured associatedModel was not valid (you tried "+r+")");t.ownerModel=o;t.associatedModel=s;Ext.applyIf(t,{ownerName:i,associatedName:r});t.associationId="association"+ ++t.statics().AUTO_ID},getReader:function(){var t=this,n=t.reader,i=t.associatedModel;return n&&(Ext.isString(n)&&(n={type:n}),n.isReader?n.setModel(i):Ext.applyIf(n,{model:i,type:t.defaultReaderType}),t.reader=Ext.createByAlias("reader."+n.type,n)),t.reader||null}})