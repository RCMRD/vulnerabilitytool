Ext.define("Ext.data.Operation",{synchronous:!0,action:undefined,filters:undefined,sorters:undefined,groupers:undefined,start:undefined,limit:undefined,batch:undefined,callback:undefined,scope:undefined,started:!1,running:!1,complete:!1,success:undefined,exception:!1,error:undefined,actionCommitRecordsRe:/^(?:create|update)$/i,actionSkipSyncRe:/^destroy$/i,constructor:function(n){Ext.apply(this,n||{})},commitRecords:function(n){var i=this,e=i.actionCommitRecordsRe.test(i.action),c,r,t,o,u,s,l,f,h;if(!i.actionSkipSyncRe.test(i.action)&&(t=i.records,t&&t.length)){if(e&&(h=[]),t.length>1)if(i.action=="update"||t[0].clientIdProperty)for(c=new Ext.util.MixedCollection,c.addAll(n),r=t.length;r--;)u=t[r],o=c.findBy(i.matchClientRec,u),f=u.copyFrom(o),e&&h.push(f);else for(s=0,l=t.length;s<l;++s)u=t[s],o=n[s],u&&o&&(f=i.updateRecord(u,o),e&&h.push(f));else f=i.updateRecord(t[0],n[0]),e&&(h[0]=f);if(e)for(r=t.length;r--;)t[r].commit(!1,h[r])}},updateRecord:function(n,t){return t&&(n.phantom||n.getId()===t.getId())?n.copyFrom(t):[]},matchClientRec:function(n){var t=this,i=t.getId();return i&&n.getId()===i?!0:n.internalId===t.internalId},setStarted:function(){this.started=!0;this.running=!0},setCompleted:function(){this.complete=!0;this.running=!1},setSuccessful:function(){this.success=!0},setException:function(n){this.exception=!0;this.success=!1;this.running=!1;this.error=n},hasException:function(){return this.exception===!0},getError:function(){return this.error},getRecords:function(){var n=this.getResultSet();return this.records||(n?n.records:null)},getResultSet:function(){return this.resultSet},isStarted:function(){return this.started===!0},isRunning:function(){return this.running===!0},isComplete:function(){return this.complete===!0},wasSuccessful:function(){return this.isComplete()&&this.success===!0},setBatch:function(n){this.batch=n},allowWrite:function(){return this.action!="read"}})