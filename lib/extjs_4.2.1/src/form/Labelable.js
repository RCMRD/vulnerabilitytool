Ext.define("Ext.form.Labelable",{requires:["Ext.XTemplate"],autoEl:{tag:"table",cellpadding:0},childEls:["labelCell","labelEl","bodyEl","sideErrorCell","errorEl","inputRow"],labelableRenderTpl:['<tr role="presentation" id="{id}-inputRow" <tpl if="inFormLayout">id="{id}"<\/tpl> class="{inputRowCls}">','<tpl if="labelOnLeft">','<td role="presentation" id="{id}-labelCell" style="{labelCellStyle}" {labelCellAttrs}>',"{beforeLabelTpl}",'<label id="{id}-labelEl" {labelAttrTpl}<tpl if="inputId"> for="{inputId}"<\/tpl> class="{labelCls}"','<tpl if="labelStyle"> style="{labelStyle}"<\/tpl>',' unselectable="on"',">","{beforeLabelTextTpl}",'<tpl if="fieldLabel">{fieldLabel}{labelSeparator}<\/tpl>',"{afterLabelTextTpl}","<\/label>","{afterLabelTpl}","<\/td>","<\/tpl>",'<td role="presentation" class="{baseBodyCls} {fieldBodyCls} {extraFieldBodyCls}" id="{id}-bodyEl" colspan="{bodyColspan}" role="presentation">',"{beforeBodyEl}","<tpl if=\"labelAlign=='top'\">","{beforeLabelTpl}",'<div role="presentation" id="{id}-labelCell" style="{labelCellStyle}">','<label id="{id}-labelEl" {labelAttrTpl}<tpl if="inputId"> for="{inputId}"<\/tpl> class="{labelCls}"','<tpl if="labelStyle"> style="{labelStyle}"<\/tpl>',' unselectable="on"',">","{beforeLabelTextTpl}",'<tpl if="fieldLabel">{fieldLabel}{labelSeparator}<\/tpl>',"{afterLabelTextTpl}","<\/label>","<\/div>","{afterLabelTpl}","<\/tpl>","{beforeSubTpl}","{[values.$comp.getSubTplMarkup(values)]}","{afterSubTpl}","<tpl if=\"msgTarget==='side'\">","{afterBodyEl}","<\/td>","<td role=\"presentation\" id=\"{id}-sideErrorCell\" vAlign=\"{[values.labelAlign==='top' && !values.hideLabel ? 'bottom' : 'middle']}\" style=\"{[values.autoFitErrors ? 'display:none' : '']}\" width=\"{errorIconWidth}\">",'<div role="presentation" id="{id}-errorEl" class="{errorMsgCls}" style="display:none"><\/div>',"<\/td>","<tpl elseif=\"msgTarget=='under'\">",'<div role="presentation" id="{id}-errorEl" class="{errorMsgClass}" colspan="2" style="display:none"><\/div>',"{afterBodyEl}","<\/td>","<\/tpl>","<\/tr>",{disableFormats:!0}],activeErrorsTpl:undefined,htmlActiveErrorsTpl:['<tpl if="errors && errors.length">','<ul class="{listCls}"><tpl for="errors"><li role="alert">{.}<\/li><\/tpl><\/ul>',"<\/tpl>"],plaintextActiveErrorsTpl:['<tpl if="errors && errors.length">','<tpl for="errors"><tpl if="xindex &gt; 1">\n<\/tpl>{.}<\/tpl>',"<\/tpl>"],isFieldLabelable:!0,formItemCls:Ext.baseCSSPrefix+"form-item",labelCls:Ext.baseCSSPrefix+"form-item-label",errorMsgCls:Ext.baseCSSPrefix+"form-error-msg",baseBodyCls:Ext.baseCSSPrefix+"form-item-body",inputRowCls:Ext.baseCSSPrefix+"form-item-input-row",fieldBodyCls:"",clearCls:Ext.baseCSSPrefix+"clear",invalidCls:Ext.baseCSSPrefix+"form-invalid",fieldLabel:undefined,labelAlign:"left",labelWidth:100,labelPad:5,labelSeparator:":",hideLabel:!1,hideEmptyLabel:!0,preventMark:!1,autoFitErrors:!0,msgTarget:"qtip",noWrap:!0,labelableInsertions:["beforeBodyEl","afterBodyEl","beforeLabelTpl","afterLabelTpl","beforeSubTpl","afterSubTpl","beforeLabelTextTpl","afterLabelTextTpl","labelAttrTpl"],labelableRenderProps:["allowBlank","id","labelAlign","fieldBodyCls","extraFieldBodyCls","baseBodyCls","clearCls","labelSeparator","msgTarget","inputRowCls"],initLabelable:function(){var n=this,t=n.padding;t&&(n.padding=undefined,n.extraMargins=Ext.Element.parseBox(t));n.activeErrorsTpl||(n.activeErrorsTpl=n.msgTarget=="title"?n.plaintextActiveErrorsTpl:n.htmlActiveErrorsTpl);n.addCls(Ext.plainTableCls);n.addCls(n.formItemCls);n.lastActiveError="";n.addEvents("errorchange");n.enableBubble("errorchange")},trimLabelSeparator:function(){var t=this,i=t.labelSeparator,n=t.fieldLabel||"",r=n.substr(n.length-1);return r===i?n.slice(0,-1):n},getFieldLabel:function(){return this.trimLabelSeparator()},setFieldLabel:function(n){n=n||"";var t=this,r=t.labelSeparator,i=t.labelEl;t.fieldLabel=n;t.rendered&&(Ext.isEmpty(n)&&t.hideEmptyLabel?i.parent().setDisplayed("none"):(r&&(n=t.trimLabelSeparator()+r),i.update(n),i.parent().setDisplayed("")),t.updateLayout())},getInsertionRenderData:function(n,t){for(var u=t.length,r,i;u--;)r=t[u],i=this[r],i&&typeof i!="string"&&(i.isTemplate||(i=Ext.XTemplate.getTpl(this,r)),i=i.apply(n)),n[r]=i||"";return n},getLabelableRenderData:function(){var n=this,i,t,r=n.labelAlign==="top";return Ext.form.Labelable.errorIconWidth||(t=Ext.getBody().createChild({style:"position:absolute",cls:Ext.baseCSSPrefix+"form-invalid-icon"}),Ext.form.Labelable.errorIconWidth=t.getWidth()+t.getMargin("l"),t.remove()),i=Ext.copyTo({inFormLayout:n.ownerLayout&&n.ownerLayout.type==="form",inputId:n.getInputId(),labelOnLeft:!r,hideLabel:!n.hasVisibleLabel(),fieldLabel:n.getFieldLabel(),labelCellStyle:n.getLabelCellStyle(),labelCellAttrs:n.getLabelCellAttrs(),labelCls:n.getLabelCls(),labelStyle:n.getLabelStyle(),bodyColspan:n.getBodyColspan(),externalError:!n.autoFitErrors,errorMsgCls:n.getErrorMsgCls(),errorIconWidth:Ext.form.Labelable.errorIconWidth},n,n.labelableRenderProps,!0),n.getInsertionRenderData(i,n.labelableInsertions),i},xhooks:{beforeRender:function(){var n=this;n.setFieldDefaults(n.getHierarchyState().fieldDefaults);n.ownerLayout&&n.addCls(Ext.baseCSSPrefix+n.ownerLayout.type+"-form-item")},onRender:function(){var t=this,i,n,r={};if(t.extraMargins){i=t.el.getMargin();for(n in i)i.hasOwnProperty(n)&&(r["margin-"+n]=i[n]+t.extraMargins[n]+"px");t.el.setStyle(r)}}},hasVisibleLabel:function(){return this.hideLabel?!1:!(this.hideEmptyLabel&&!this.getFieldLabel())},getLabelWidth:function(){var n=this;return n.hasVisibleLabel()?n.labelWidth+n.labelPad:0},getBodyColspan:function(){var n=this,t;return t=n.msgTarget==="side"&&(!n.autoFitErrors||n.hasActiveError())?1:2,n.labelAlign==="top"||n.hasVisibleLabel()||t++,t},getLabelCls:function(){var n=this.labelCls+" "+Ext.dom.Element.unselectableCls,t=this.labelClsExtra;return t?n+" "+t:n},getLabelCellStyle:function(){var n=this,t=n.hideLabel||!n.getFieldLabel()&&n.hideEmptyLabel;return t?"display:none;":""},getErrorMsgCls:function(){var n=this,t=n.hideLabel||!n.fieldLabel&&n.hideEmptyLabel;return n.errorMsgCls+(!t&&n.labelAlign==="top"?" "+Ext.baseCSSPrefix+"lbl-top-err-icon":"")},getLabelCellAttrs:function(){var n=this,t=n.labelAlign,i="";return t!=="top"&&(i='valign="top" halign="'+t+'" width="'+(n.labelWidth+n.labelPad)+'"'),i+' class="'+Ext.baseCSSPrefix+'field-label-cell"'},getLabelStyle:function(){var n=this,i=n.labelPad,t="";return n.labelAlign!=="top"&&(n.labelWidth&&(t="width:"+n.labelWidth+"px;"),i&&(t+="margin-right:"+i+"px;")),t+(n.labelStyle||"")},getSubTplMarkup:function(){return""},getInputId:function(){return""},getActiveError:function(){return this.activeError||""},hasActiveError:function(){return!!this.getActiveError()},setActiveError:function(n){this.setActiveErrors(n)},getActiveErrors:function(){return this.activeErrors||[]},setActiveErrors:function(n){n=Ext.Array.from(n);this.activeError=n[0];this.activeErrors=n;this.activeError=this.getTpl("activeErrorsTpl").apply({errors:n,listCls:Ext.plainListCls});this.renderActiveError()},unsetActiveError:function(){delete this.activeError;delete this.activeErrors;this.renderActiveError()},renderActiveError:function(){var n=this,t=n.getActiveError(),i=!!t;t!==n.lastActiveError&&(n.fireEvent("errorchange",n,t),n.lastActiveError=t);!n.rendered||n.isDestroyed||n.preventMark||(n.el[i?"addCls":"removeCls"](n.invalidCls),n.getActionEl().dom.setAttribute("aria-invalid",i),n.errorEl&&(n.errorEl.dom.innerHTML=t))},setFieldDefaults:function(n){for(var t in n)this.hasOwnProperty(t)||(this[t]=n[t])}})