Ext.define("Ext.form.field.TextArea",{extend:"Ext.form.field.Text",alias:["widget.textareafield","widget.textarea"],alternateClassName:"Ext.form.TextArea",requires:["Ext.XTemplate","Ext.layout.component.field.TextArea","Ext.util.DelayedTask"],fieldSubTpl:['<textarea id="{id}" {inputAttrTpl}','<tpl if="name"> name="{name}"<\/tpl>','<tpl if="rows"> rows="{rows}" <\/tpl>','<tpl if="cols"> cols="{cols}" <\/tpl>','<tpl if="placeholder"> placeholder="{placeholder}"<\/tpl>','<tpl if="size"> size="{size}"<\/tpl>','<tpl if="maxLength !== undefined"> maxlength="{maxLength}"<\/tpl>','<tpl if="readOnly"> readonly="readonly"<\/tpl>','<tpl if="disabled"> disabled="disabled"<\/tpl>','<tpl if="tabIdx"> tabIndex="{tabIdx}"<\/tpl>',' class="{fieldCls} {typeCls} {inputCls}" ','<tpl if="fieldStyle"> style="{fieldStyle}"<\/tpl>',' autocomplete="off">\n','<tpl if="value">{[Ext.util.Format.htmlEncode(values.value)]}<\/tpl>',"<\/textarea>",{disableFormats:!0}],growMin:60,growMax:1e3,growAppend:"\n-",cols:20,rows:4,enterIsSpecial:!1,preventScrollbars:!1,componentLayout:"textareafield",setGrowSizePolicy:Ext.emptyFn,returnRe:/\r/g,inputCls:Ext.baseCSSPrefix+"form-textarea",getSubTplData:function(){var n=this,i=n.getFieldStyle(),t=n.callParent();return n.grow&&n.preventScrollbars&&(t.fieldStyle=(i||"")+";overflow:hidden;height:"+n.growMin+"px"),Ext.applyIf(t,{cols:n.cols,rows:n.rows}),t},afterRender:function(){var n=this;if(n.callParent(arguments),n.needsMaxCheck=n.enforceMaxLength&&n.maxLength!==Number.MAX_VALUE&&!Ext.supports.TextAreaMaxLength,n.needsMaxCheck)n.inputEl.on("paste",n.onPaste,n)},transformRawValue:function(n){return this.stripReturns(n)},transformOriginalValue:function(n){return this.stripReturns(n)},getValue:function(){return this.stripReturns(this.callParent())},valueToRaw:function(n){return n=this.stripReturns(n),this.callParent([n])},stripReturns:function(n){return n&&typeof n=="string"&&(n=n.replace(this.returnRe,"")),n},onPaste:function(){var n=this;n.pasteTask||(n.pasteTask=new Ext.util.DelayedTask(n.pasteCheck,n));n.pasteTask.delay(1)},pasteCheck:function(){var t=this,n=t.getValue(),i=t.maxLength;n.length>i&&(n=n.substr(0,i),t.setValue(n))},fireKey:function(n){var t=this,i=n.getKey(),r;n.isSpecialKey()&&(t.enterIsSpecial||i!==n.ENTER||n.hasModifier())&&t.fireEvent("specialkey",t,n);!t.needsMaxCheck||i===n.BACKSPACE||i===n.DELETE||n.isNavKeyPress()||t.isCutCopyPasteSelectAll(n,i)||(r=t.getValue(),r.length>=t.maxLength&&n.stopEvent())},isCutCopyPasteSelectAll:function(n,t){return n.ctrlKey?t===n.A||t===n.C||t===n.V||t===n.X:!1},autoSize:function(){var n=this,t;n.grow&&n.rendered&&(n.updateLayout(),t=n.inputEl.getHeight(),t!==n.lastInputHeight&&(n.fireEvent("autosize",n,t),n.lastInputHeight=t))},initAria:function(){this.callParent(arguments);this.getActionEl().dom.setAttribute("aria-multiline",!0)},beforeDestroy:function(){var n=this.pasteTask;n&&(n.cancel(),this.pasteTask=null);this.callParent()}})