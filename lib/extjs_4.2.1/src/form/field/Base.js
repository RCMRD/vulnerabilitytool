Ext.define("Ext.form.field.Base",{extend:"Ext.Component",mixins:{labelable:"Ext.form.Labelable",field:"Ext.form.field.Field"},alias:"widget.field",alternateClassName:["Ext.form.Field","Ext.form.BaseField"],requires:["Ext.util.DelayedTask","Ext.XTemplate","Ext.layout.component.field.Field"],fieldSubTpl:['<input id="{id}" type="{type}" {inputAttrTpl}',' size="1"','<tpl if="name"> name="{name}"<\/tpl>','<tpl if="value"> value="{[Ext.util.Format.htmlEncode(values.value)]}"<\/tpl>','<tpl if="placeholder"> placeholder="{placeholder}"<\/tpl>','{%if (values.maxLength !== undefined){%} maxlength="{maxLength}"{%}%}','<tpl if="readOnly"> readonly="readonly"<\/tpl>','<tpl if="disabled"> disabled="disabled"<\/tpl>','<tpl if="tabIdx"> tabIndex="{tabIdx}"<\/tpl>','<tpl if="fieldStyle"> style="{fieldStyle}"<\/tpl>',' class="{fieldCls} {typeCls} {editableCls} {inputCls}" autocomplete="off"/>',{disableFormats:!0}],subTplInsertions:["inputAttrTpl"],inputType:"text",invalidText:"The value in this field is invalid",fieldCls:Ext.baseCSSPrefix+"form-field",focusCls:"form-focus",dirtyCls:Ext.baseCSSPrefix+"form-dirty",checkChangeEvents:Ext.isIE&&(!document.documentMode||document.documentMode<9)?["change","propertychange","keyup"]:["change","input","textInput","keyup","dragdrop"],checkChangeBuffer:50,componentLayout:"field",readOnly:!1,readOnlyCls:Ext.baseCSSPrefix+"form-readonly",validateOnBlur:!0,hasFocus:!1,baseCls:Ext.baseCSSPrefix+"field",maskOnDisable:!1,stretchInputElFixed:!0,initComponent:function(){var n=this;n.callParent();n.subTplData=n.subTplData||{};n.addEvents("specialkey","writeablechange");n.initLabelable();n.initField();n.name||(n.name=n.getInputId());n.readOnly&&n.addCls(n.readOnlyCls);n.addCls(Ext.baseCSSPrefix+"form-type-"+n.inputType)},getInputId:function(){return this.inputId||(this.inputId=this.id+"-inputEl")},getSubTplData:function(){var n=this,t=n.inputType,r=n.getInputId(),i;return i=Ext.apply({id:r,cmpId:n.id,name:n.name||r,disabled:n.disabled,readOnly:n.readOnly,value:n.getRawValue(),type:t,fieldCls:n.fieldCls,fieldStyle:n.getFieldStyle(),tabIdx:n.tabIndex,inputCls:n.inputCls,typeCls:Ext.baseCSSPrefix+"form-"+(t==="password"?"text":t)},n.subTplData),n.getInsertionRenderData(i,n.subTplInsertions),i},applyRenderSelectors:function(){var n=this;n.callParent();n.addChildEls("inputEl");n.inputEl=n.el.getById(n.getInputId())},getSubTplMarkup:function(){return this.getTpl("fieldSubTpl").apply(this.getSubTplData())},initRenderTpl:function(){var n=this;return n.hasOwnProperty("renderTpl")||(n.renderTpl=n.getTpl("labelableRenderTpl")),n.callParent()},initRenderData:function(){return Ext.applyIf(this.callParent(),this.getLabelableRenderData())},setFieldStyle:function(n){var t=this,i=t.inputEl;i&&i.applyStyles(n);t.fieldStyle=n},getFieldStyle:function(){return Ext.isObject(this.fieldStyle)?Ext.DomHelper.generateStyles(this.fieldStyle):this.fieldStyle||""},onRender:function(){this.callParent(arguments);this.renderActiveError()},getFocusEl:function(){return this.inputEl},isFileUpload:function(){return this.inputType==="file"},getSubmitData:function(){var n=this,t=null,i;return n.disabled||!n.submitValue||n.isFileUpload()||(i=n.getSubmitValue(),i!==null&&(t={},t[n.getName()]=i)),t},getSubmitValue:function(){return this.processRawValue(this.getRawValue())},getRawValue:function(){var n=this,t=n.inputEl?n.inputEl.getValue():Ext.value(n.rawValue,"");return n.rawValue=t,t},setRawValue:function(n){var t=this;return n=Ext.value(t.transformRawValue(n),""),t.rawValue=n,t.inputEl&&(t.inputEl.dom.value=n),n},transformRawValue:Ext.identityFn,valueToRaw:function(n){return""+Ext.value(n,"")},rawToValue:Ext.identityFn,processRawValue:Ext.identityFn,getValue:function(){var n=this,t=n.rawToValue(n.processRawValue(n.getRawValue()));return n.value=t,t},setValue:function(n){var t=this;return t.setRawValue(t.valueToRaw(n)),t.mixins.field.setValue.call(t,n)},onBoxReady:function(){var n=this;n.callParent();n.setReadOnlyOnBoxReady&&n.setReadOnly(n.readOnly)},onDisable:function(){var n=this,t=n.inputEl;n.callParent();t&&(t.dom.disabled=!0,n.hasActiveError()&&(n.clearInvalid(),n.needsValidateOnEnable=!0))},onEnable:function(){var n=this,t=n.inputEl;n.callParent();t&&(t.dom.disabled=!1,n.needsValidateOnEnable&&(delete n.needsValidateOnEnable,n.forceValidation=!0,n.isValid(),delete n.forceValidation))},setReadOnly:function(n){var t=this,i=t.inputEl;n=!!n;t[n?"addCls":"removeCls"](t.readOnlyCls);t.readOnly=n;i?i.dom.readOnly=n:t.rendering&&(t.setReadOnlyOnBoxReady=!0);t.fireEvent("writeablechange",t,n)},fireKey:function(n){n.isSpecialKey()&&this.fireEvent("specialkey",this,new Ext.EventObjectImpl(n))},initEvents:function(){var n=this,i=n.inputEl,u,f,e=n.checkChangeEvents,t,o=e.length,r;if(i)for(n.mon(i,Ext.EventManager.getKeyEvent(),n.fireKey,n),u=new Ext.util.DelayedTask(n.checkChange,n),n.onChangeEvent=f=function(){u.delay(n.checkChangeBuffer)},t=0;t<o;t++)r=e[t],r==="propertychange"&&(n.usesPropertychange=!0),n.mon(i,r,f);n.callParent()},doComponentLayout:function(){var n=this,t=n.inputEl,i=n.usesPropertychange,r="propertychange",u=n.onChangeEvent;i&&n.mun(t,r,u);n.callParent(arguments);i&&n.mon(t,r,u)},onDirtyChange:function(n){this[n?"addCls":"removeCls"](this.dirtyCls)},isValid:function(){var n=this,t=n.disabled,i=n.forceValidation||!t;return i?n.validateValue(n.processRawValue(n.getRawValue())):t},validateValue:function(n){var t=this,i=t.getErrors(n),r=Ext.isEmpty(i);return t.preventMark||(r?t.clearInvalid():t.markInvalid(i)),r},markInvalid:function(n){var t=this,r=t.getActiveError(),i;t.setActiveErrors(Ext.Array.from(n));i=t.getActiveError();r!==i&&t.setError(i)},clearInvalid:function(){var n=this,t=n.hasActiveError();delete n.needsValidateOnEnable;n.unsetActiveError();t&&n.setError("")},setError:function(n){var t=this,i=t.msgTarget,r;t.rendered&&(i=="title"||i=="qtip"?(t.rendered&&(r=i=="qtip"?"data-errorqtip":"title"),t.getActionEl().dom.setAttribute(r,n||"")):t.updateLayout())},renderActiveError:function(){var n=this,t=n.hasActiveError();n.inputEl&&n.inputEl[t?"addCls":"removeCls"](n.invalidCls+"-field");n.mixins.labelable.renderActiveError.call(n)},getActionEl:function(){return this.inputEl||this.el}})