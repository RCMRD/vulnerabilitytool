Ext.define("Ext.form.field.Display",{extend:"Ext.form.field.Base",alias:"widget.displayfield",requires:["Ext.util.Format","Ext.XTemplate"],alternateClassName:["Ext.form.DisplayField","Ext.form.Display"],fieldSubTpl:['<div id="{id}" role="input" ','<tpl if="fieldStyle"> style="{fieldStyle}"<\/tpl>',' class="{fieldCls}">{value}<\/div>',{compiled:!0,disableFormats:!0}],readOnly:!0,fieldCls:Ext.baseCSSPrefix+"form-display-field",fieldBodyCls:Ext.baseCSSPrefix+"form-display-field-body",htmlEncode:!1,noWrap:!1,validateOnChange:!1,initEvents:Ext.emptyFn,submitValue:!1,isDirty:function(){return!1},isValid:function(){return!0},validate:function(){return!0},getRawValue:function(){return this.rawValue},setRawValue:function(n){var t=this;return n=Ext.value(n,""),t.rawValue=n,t.rendered&&(t.inputEl.dom.innerHTML=t.getDisplayValue(),t.updateLayout()),n},getDisplayValue:function(){var n=this,t=this.getRawValue();return n.renderer?n.renderer.call(n.scope||n,t,n):n.htmlEncode?Ext.util.Format.htmlEncode(t):t},getSubTplData:function(){var n=this.callParent(arguments);return n.value=this.getDisplayValue(),n}})