Ext.define("Ext.container.Viewport",{extend:"Ext.container.Container",alias:"widget.viewport",requires:["Ext.EventManager"],alternateClassName:"Ext.Viewport",isViewport:!0,ariaRole:"application",preserveElOnDestroy:!0,viewportCls:Ext.baseCSSPrefix+"viewport",initComponent:function(){var n=this,i=document.body.parentNode,t=n.el=Ext.getBody();Ext.getScrollbarSize();n.width=n.height=undefined;n.callParent(arguments);Ext.fly(i).addCls(n.viewportCls);n.autoScroll&&(Ext.fly(i).setStyle(n.getOverflowStyle()),delete n.autoScroll);t.setHeight=t.setWidth=Ext.emptyFn;t.dom.scroll="no";n.allowDomMove=!1;n.renderTo=n.el},applyTargetCls:function(n){this.el.addCls(n)},onRender:function(){var n=this;n.callParent(arguments);n.width=Ext.Element.getViewportWidth();n.height=Ext.Element.getViewportHeight()},afterFirstLayout:function(){var n=this;n.callParent(arguments);setTimeout(function(){Ext.EventManager.onWindowResize(n.fireResize,n)},1)},fireResize:function(n,t){(n!=this.width||t!=this.height)&&this.setSize(n,t)},initHierarchyState:function(){this.callParent([this.hierarchyState=Ext.rootHierarchyState])},beforeDestroy:function(){var n=this;n.removeUIFromElement();n.el.removeCls(n.baseCls);Ext.fly(document.body.parentNode).removeCls(n.viewportCls);n.callParent()}})