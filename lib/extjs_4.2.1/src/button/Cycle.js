Ext.define("Ext.button.Cycle",{alias:"widget.cycle",extend:"Ext.button.Split",alternateClassName:"Ext.CycleButton",getButtonText:function(n){var t=this,i="";return n&&t.showText===!0?(t.prependText&&(i+=t.prependText),i+n.text):t.text},setActiveItem:function(n,t){var i=this;Ext.isObject(n)||(n=i.menu.getComponent(n));n&&(i.rendered?(i.setText(i.getButtonText(n)),i.setIconCls(n.iconCls),i.setGlyph(n.glyph)):(i.text=i.getButtonText(n),i.iconCls=n.iconCls,i.glyph=n.glyph),i.activeItem=n,n.checked||n.setChecked(!0,!1),i.forceIcon&&i.setIconCls(i.forceIcon),i.forceGlyph&&i.setGlyph(i.forceGlyph),t||i.fireEvent("change",i,n))},getActiveItem:function(){return this.activeItem},initComponent:function(){var n=this,u=0,r,t,f,i;if(n.addEvents("change"),n.changeHandler){n.on("change",n.changeHandler,n.scope||n);delete n.changeHandler}for(r=(n.menu.items||[]).concat(n.items||[]),n.menu=Ext.applyIf({cls:Ext.baseCSSPrefix+"cycle-menu",items:[]},n.menu),f=r.length,t=0;t<f;t++)i=r[t],i=Ext.applyIf({group:n.id,itemIndex:t,checkHandler:n.checkHandler,scope:n,checked:i.checked||!1},i),n.menu.items.push(i),i.checked&&(u=t);n.itemCount=n.menu.items.length;n.callParent(arguments);n.on("click",n.toggleSelected,n);n.setActiveItem(u,n);n.width&&n.showText&&n.addCls(Ext.baseCSSPrefix+"cycle-fixed-width")},checkHandler:function(n,t){t&&this.setActiveItem(n)},toggleSelected:function(){var n=this,i=n.menu,t;t=n.activeItem.next(":not([disabled])")||i.items.getAt(0);t.setChecked(!0)}})