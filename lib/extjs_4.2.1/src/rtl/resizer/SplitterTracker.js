Ext.define("Ext.rtl.resizer.SplitterTracker",{override:"Ext.resizer.SplitterTracker",getVertPrevConstrainLeft:function(n){return!this.splitter.getHierarchyState().rtl!=!Ext.rootHierarchyState.rtl?(n.prevCmp.maxWidth?n.prevBox.right-n.prevCmp.maxWidth:n.nextBox.x+(n.nextCmp.minWidth||n.defaultMin))-n.splitWidth:this.callParent(arguments)},getVertPrevConstrainRight:function(n){return!this.splitter.getHierarchyState().rtl!=!Ext.rootHierarchyState.rtl?n.prevBox.right-(n.prevCmp.minWidth||n.defaultMin):this.callParent(arguments)},getVertNextConstrainLeft:function(n){return!this.splitter.getHierarchyState().rtl!=!Ext.rootHierarchyState.rtl?n.nextBox.x+(n.nextCmp.minWidth||n.defaultMin):this.callParent(arguments)},getVertNextConstrainRight:function(n){return!this.splitter.getHierarchyState().rtl!=!Ext.rootHierarchyState.rtl?(n.nextCmp.maxWidth?n.nextBox.x+n.nextCmp.maxWidth:n.prevBox.right-(n.prevBox.minWidth||n.defaultMin))+n.splitWidth:this.callParent(arguments)},getResizeOffset:function(){var n=this.getOffset("dragTarget");return!this.splitter.getHierarchyState().rtl!=!Ext.rootHierarchyState.rtl&&(n[0]=-n[0]),n}})