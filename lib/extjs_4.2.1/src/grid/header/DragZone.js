Ext.define("Ext.grid.header.DragZone",{extend:"Ext.dd.DragZone",colHeaderSelector:"."+Ext.baseCSSPrefix+"column-header",colInnerSelector:"."+Ext.baseCSSPrefix+"column-header-inner",maxProxyWidth:120,constructor:function(n){this.headerCt=n;this.ddGroup=this.getDDGroup();this.callParent([n.el]);this.proxy.el.addCls(Ext.baseCSSPrefix+"grid-col-dd")},getDDGroup:function(){return"header-dd-zone-"+this.headerCt.up("[scrollerOwner]").id},getDragData:function(n){if(n.getTarget(this.colInnerSelector)){var i=n.getTarget(this.colHeaderSelector),t,r;if(i&&(t=Ext.getCmp(i.id),!this.headerCt.dragging&&t.draggable&&!(t.isOnLeftEdge(n)||t.isOnRightEdge(n))))return r=document.createElement("div"),r.innerHTML=Ext.getCmp(i.id).text,{ddel:r,header:t}}return!1},onBeforeDrag:function(){return!(this.headerCt.dragging||this.disabled)},onInitDrag:function(){this.headerCt.dragging=!0;this.callParent(arguments)},onDragDrop:function(){this.headerCt.dragging=!1;this.callParent(arguments)},afterRepair:function(){this.callParent();this.headerCt.dragging=!1},getRepairXY:function(){return this.dragData.header.el.getXY()},disable:function(){this.disabled=!0},enable:function(){this.disabled=!1}})