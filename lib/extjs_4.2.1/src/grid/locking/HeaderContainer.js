Ext.define("Ext.grid.locking.HeaderContainer",{extend:"Ext.grid.header.Container",requires:["Ext.grid.ColumnManager"],constructor:function(n){var t=this,r,u,f=[],i=n.lockedGrid,e=n.normalGrid;t.lockable=n;t.callParent();i.columnManager.rootColumns=e.columnManager.rootColumns=n.columnManager=t.columnManager=new Ext.grid.ColumnManager(i.headerCt,e.headerCt);r=i.headerCt.events;for(u in r)r.hasOwnProperty(u)&&f.push(u);t.relayEvents(i.headerCt,f);t.relayEvents(e.headerCt,f)},getRefItems:function(){return this.lockable.lockedGrid.headerCt.getRefItems().concat(this.lockable.normalGrid.headerCt.getRefItems())},getGridColumns:function(){return this.lockable.lockedGrid.headerCt.getGridColumns().concat(this.lockable.normalGrid.headerCt.getGridColumns())},getColumnsState:function(){var n=this,t=n.lockable.lockedGrid.headerCt.getColumnsState(),i=n.lockable.normalGrid.headerCt.getColumnsState();return t.concat(i)},applyColumnsState:function(n){for(var h=this,c=h.lockable.lockedGrid,i=c.headerCt,r=h.lockable.normalGrid.headerCt,a=Ext.Array.toValueMap(i.items.items,"headerId"),v=Ext.Array.toValueMap(r.items.items,"headerId"),e=[],o=[],l=1,y=n.length,t,s,f,u=0;u<y;u++)f=n[u],s=a[f.id],t=s||v[f.id],t&&(t.applyColumnState&&t.applyColumnState(f),t.locked===undefined&&(t.locked=!!s),t.locked?(e.push(t),t.hidden||typeof t.width!="number"||(l+=t.width)):o.push(t));e.length+o.length==i.items.getCount()+r.items.getCount()&&(i.removeAll(!1),r.removeAll(!1),i.add(e),r.add(o),c.setWidth(l))}})