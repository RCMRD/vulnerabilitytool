Ext.define("Ext.grid.feature.RowWrap",{extend:"Ext.grid.feature.Feature",alias:"feature.rowwrap",rowWrapTd:"td."+Ext.baseCSSPrefix+"grid-rowwrap",hasFeatureEvent:!1,tableTpl:{before:function(n){n.view.bufferedRenderer&&(n.view.bufferedRenderer.variableRowHeight=!0)},priority:200},wrapTpl:['<tr data-boundView="{view.id}" data-recordId="{record.internalId}" data-recordIndex="{recordIndex}" class="{[values.itemClasses.join(" ")]} '+Ext.baseCSSPrefix+'grid-wrap-row">','<td class="'+Ext.baseCSSPrefix+"grid-rowwrap "+Ext.baseCSSPrefix+'grid-td" colSpan="{columns.length}">','<table class="'+Ext.baseCSSPrefix+"{view.id}-table "+Ext.baseCSSPrefix+'grid-table" border="0" cellspacing="0" cellpadding="0">',"{[values.view.renderColumnSizer(out)]}","{%","values.itemClasses.length = 0;","this.nextTpl.applyOut(values, out, parent)","%}","<\/table>","<\/td>","<\/tr>",{priority:200}],init:function(){var n=this;n.view.addTableTpl(n.tableTpl);n.view.addRowTpl(Ext.XTemplate.getTpl(n,"wrapTpl"));n.view.headerCt.on({columnhide:n.onColumnHideShow,columnshow:n.onColumnHideShow,scope:n})},onColumnHideShow:function(){for(var t=this.view,i=t.el.query(this.rowWrapTd),r=t.headerCt.getVisibleGridColumns().length,u=i.length,n=0;n<u;++n)i[n].colSpan=r}})