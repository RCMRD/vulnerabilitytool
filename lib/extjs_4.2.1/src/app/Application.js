Ext.define("Ext.app.Application",{extend:"Ext.app.Controller",requires:["Ext.tip.QuickTipManager"],scope:undefined,enableQuickTips:!0,appFolder:"app",appProperty:"app",namespaces:[],autoCreateViewport:!1,paths:null,onClassExtended:function(n,t,i){var h=Ext.app.Controller,c=n.prototype,e=[],s,u,r,f,o;if(r=t.name||n.superclass.name,o=t.appFolder||n.superclass.appFolder,r&&(t.$namespace=r,Ext.app.addNamespaces(r)),t.namespaces&&Ext.app.addNamespaces(t.namespaces),t["paths processed"])delete t["paths processed"];else if(r&&o&&Ext.Loader.setPath(r,o),u=t.paths,u)for(f in u)u.hasOwnProperty(f)&&Ext.Loader.setPath(f,u[f]);t.autoCreateViewport&&(r||Ext.Error.raise("[Ext.app.Application] Can't resolve namespace for "+t.$className+", did you forget to specify 'name' property?"),h.processDependencies(c,e,r,"view",["Viewport"]));e.length&&(s=i.onBeforeCreated,i.onBeforeCreated=function(){var n=Ext.Array.clone(arguments);Ext.require(e,function(){return s.apply(this,n)})})},constructor:function(){var n=this;Ext.isEmpty(n.name)&&Ext.Error.raise("[Ext.app.Application] Name property is required");n.callParent(arguments);n.doInit(n);n.initNamespace();n.initControllers();n.onBeforeLaunch();n.finishInitControllers()},initNamespace:function(){var t=this,i=t.appProperty,n;n=Ext.namespace(t.name);n&&(n.getApplication=function(){return t},i&&(n[i]?n[i]!==t&&Ext.log.warn("An existing reference is being overwritten for "+name+"."+i+". See the appProperty config."):n[i]=t))},initControllers:function(){var t=this,i=Ext.Array.from(t.controllers),n,r;for(t.controllers=new Ext.util.MixedCollection,n=0,r=i.length;n<r;n++)t.getController(i[n])},finishInitControllers:function(){var i=this,t,n,r;for(t=i.controllers.getRange(),n=0,r=t.length;n<r;n++)t[n].finishInit(i)},launch:Ext.emptyFn,onBeforeLaunch:function(){var n=this,i,t,r,u;for(n.enableQuickTips&&n.initQuickTips(),n.autoCreateViewport&&n.initViewport(),n.launch.call(n.scope||n),n.launched=!0,n.fireEvent("launch",n),i=n.controllers.items,r=i.length,t=0;t<r;t++){u=i[t];u.onLaunch(n)}},getModuleClassName:function(n,t){return Ext.app.Controller.getFullName(n,t,this.name).absoluteName},initQuickTips:function(){Ext.tip.QuickTipManager.init()},initViewport:function(){var n=this.getView("Viewport");n&&n.create()},getController:function(n){var i=this,r=i.controllers,u,t;return t=r.get(n),t||(u=i.getModuleClassName(n,"controller"),t=Ext.create(u,{application:i,id:n}),r.add(t),i._initialized&&t.doInit(i)),t},getApplication:function(){return this}})