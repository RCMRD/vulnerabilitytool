Ext.define("Ext.draw.Text",{extend:"Ext.draw.Component",uses:["Ext.util.CSS"],alias:"widget.text",text:"",focusable:!1,viewBox:!1,autoSize:!0,baseCls:Ext.baseCSSPrefix+"surface "+Ext.baseCSSPrefix+"draw-text",initComponent:function(){var n=this;n.textConfig=Ext.apply({type:"text",text:n.text,rotate:{degrees:n.degrees||0}},n.textStyle);Ext.apply(n.textConfig,n.getStyles(n.styleSelectors||n.styleSelector));n.initialConfig.items=[n.textConfig];n.callParent(arguments)},getStyles:function(n){n=Ext.Array.from(n);for(var i=0,f=n.length,r,t,u={};i<f;i++)r=Ext.util.CSS.getRule(n[i]),r&&(t=r.style,t&&Ext.apply(u,{"font-family":t.fontFamily,"font-weight":t.fontWeight,"line-height":t.lineHeight,"font-size":t.fontSize,fill:t.color}));return u},setAngle:function(n){var t=this,i,r;t.rendered?(i=t.surface,r=i.items.items[0],t.degrees=n,r.setAttributes({rotate:{degrees:n}},!0),(t.autoSize||t.viewBox)&&t.updateLayout()):t.degrees=n},setText:function(n){var t=this,i,r;if(t.rendered)i=t.surface,r=i.items.items[0],t.text=n||"",i.remove(r),t.textConfig.type="text",t.textConfig.text=t.text,r=i.add(t.textConfig),r.setAttributes({rotate:{degrees:t.degrees}},!0),(t.autoSize||t.viewBox)&&t.updateLayout();else t.on({render:function(){t.setText(n)},single:!0})}})