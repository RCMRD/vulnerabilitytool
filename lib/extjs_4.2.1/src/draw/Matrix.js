Ext.define("Ext.draw.Matrix",{requires:["Ext.draw.Draw"],constructor:function(n,t,i,r,u,f){this.matrix=n!=null?[[n,i,u],[t,r,f],[0,0,1]]:[[1,0,0],[0,1,0],[0,0,1]]},add:function(n,t,i,r,u,f){for(var c=this,l=[[],[],[]],a=[[n,i,u],[t,r,f],[0,0,1]],o,s,h,e=0;e<3;e++)for(o=0;o<3;o++){for(h=0,s=0;s<3;s++)h+=c.matrix[e][s]*a[s][o];l[e][o]=h}c.matrix=l},prepend:function(n,t,i,r,u,f){for(var c=this,l=[[],[],[]],a=[[n,i,u],[t,r,f],[0,0,1]],o,s,h,e=0;e<3;e++)for(o=0;o<3;o++){for(h=0,s=0;s<3;s++)h+=a[e][s]*c.matrix[s][o];l[e][o]=h}c.matrix=l},invert:function(){var n=this.matrix,i=n[0][0],r=n[1][0],u=n[0][1],f=n[1][1],e=n[0][2],o=n[1][2],t=i*f-r*u;return new Ext.draw.Matrix(f/t,-r/t,-u/t,i/t,(u*o-f*e)/t,(r*e-i*o)/t)},clone:function(){var n=this.matrix,t=n[0][0],i=n[1][0],r=n[0][1],u=n[1][1],f=n[0][2],e=n[1][2];return new Ext.draw.Matrix(t,i,r,u,f,e)},translate:function(n,t){this.prepend(1,0,0,1,n,t)},scale:function(n,t,i,r){var u=this;t==null&&(t=n);u.add(n,0,0,t,i*(1-n),r*(1-t))},rotate:function(n,t,i){n=Ext.draw.Draw.rad(n);var f=this,r=+Math.cos(n).toFixed(9),u=+Math.sin(n).toFixed(9);f.add(r,u,-u,r,t-r*t+u*i,-(u*t)+i-r*i)},x:function(n,t){var i=this.matrix;return n*i[0][0]+t*i[0][1]+i[0][2]},y:function(n,t){var i=this.matrix;return n*i[1][0]+t*i[1][1]+i[1][2]},get:function(n,t){return+this.matrix[n][t].toFixed(4)},toString:function(){var n=this;return[n.get(0,0),n.get(0,1),n.get(1,0),n.get(1,1),0,0].join()},toSvg:function(){var n=this;return"matrix("+[n.get(0,0),n.get(1,0),n.get(0,1),n.get(1,1),n.get(0,2),n.get(1,2)].join()+")"},toFilter:function(n,t){var i=this;return n=n||0,t=t||0,"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', filterType='bilinear', M11="+i.get(0,0)+", M12="+i.get(0,1)+", M21="+i.get(1,0)+", M22="+i.get(1,1)+", Dx="+(i.get(0,2)+n)+", Dy="+(i.get(1,2)+t)+")"},offset:function(){var n=this.matrix;return[(n[0][2]||0).toFixed(4),(n[1][2]||0).toFixed(4)]},split:function(){function r(n){return n[0]*n[0]+n[1]*n[1]}function u(n){var t=Math.sqrt(r(n));n[0]/=t;n[1]/=t}var i=this.matrix,t={translateX:i[0][2],translateY:i[1][2]},n;return n=[[i[0][0],i[0][1]],[i[1][1],i[1][1]]],t.scaleX=Math.sqrt(r(n[0])),u(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaleY=Math.sqrt(r(n[1])),u(n[1]),t.shear/=t.scaleY,t.rotate=Math.asin(-n[0][1]),t.isSimple=!+t.shear.toFixed(9)&&(t.scaleX.toFixed(9)==t.scaleY.toFixed(9)||!t.rotate),t}})