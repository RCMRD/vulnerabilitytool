Ext.define("Ext.fx.target.ElementCSS",{extend:"Ext.fx.target.Element",setAttr:function(n,t){for(var f={attrs:[],duration:[],easing:[]},c=n.length,l,i,e,o,s,r,h,a,u=0;u<c;u++){i=n[u];s=i.duration;o=i.easing;i=i.attrs;for(e in i)Ext.Array.indexOf(f.attrs,e)==-1&&(f.attrs.push(e.replace(/[A-Z]/g,function(n){return"-"+n.toLowerCase()})),f.duration.push(s+"ms"),f.easing.push(o))}for(l=f.attrs.join(","),s=f.duration.join(","),o=f.easing.join(", "),u=0;u<c;u++){i=n[u].attrs;for(e in i)for(a=i[e].length,h=0;h<a;h++)if(r=i[e][h],r[0].setStyle(Ext.supports.CSS3Prefix+"TransitionProperty",t?"":l),r[0].setStyle(Ext.supports.CSS3Prefix+"TransitionDuration",t?"":s),r[0].setStyle(Ext.supports.CSS3Prefix+"TransitionTimingFunction",t?"":o),r[0].setStyle(e,r[1]),t)r=r[0].dom.offsetWidth;else r[0].on(Ext.supports.CSS3TransitionEnd,function(){this.setStyle(Ext.supports.CSS3Prefix+"TransitionProperty",null);this.setStyle(Ext.supports.CSS3Prefix+"TransitionDuration",null);this.setStyle(Ext.supports.CSS3Prefix+"TransitionTimingFunction",null)},r[0],{single:!0})}}})