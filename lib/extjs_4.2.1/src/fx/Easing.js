Ext.require("Ext.fx.CubicBezier",function(){var t=Math,f=t.PI,n=t.pow,e=t.sin,u=t.sqrt,i=t.abs,r=1.70158;Ext.define("Ext.fx.Easing",{singleton:!0,linear:Ext.identityFn,ease:function(t){var f=.07813-t/2,e=u(.0066+f*f),o=e-f,h=n(i(o),1/3)*(o<0?-1:1),s=-e-f,c=n(i(s),1/3)*(s<0?-1:1),r=h+c+.25;return n(1-r,2)*3*r*.1+(1-r)*3*r*r+r*r*r},easeIn:function(t){return n(t,1.7)},easeOut:function(t){return n(t,.48)},easeInOut:function(t){var f=.48-t/1.04,e=u(.1734+f*f),o=e-f,h=n(i(o),1/3)*(o<0?-1:1),s=-e-f,c=n(i(s),1/3)*(s<0?-1:1),r=h+c+.5;return(1-r)*3*r*r+r*r*r},backIn:function(n){return n*n*((r+1)*n-r)},backOut:function(n){return n=n-1,n*n*((r+1)*n+r)+1},elasticIn:function(t){if(t===0||t===1)return t;var i=.3,r=i/4;return n(2,-10*t)*e((t-r)*2*f/i)+1},elasticOut:function(n){return 1-Ext.fx.Easing.elasticIn(1-n)},bounceIn:function(n){return 1-Ext.fx.Easing.bounceOut(1-n)},bounceOut:function(n){var r=7.5625,t=2.75,i;return n<1/t?i=r*n*n:n<2/t?(n-=1.5/t,i=r*n*n+.75):n<2.5/t?(n-=2.25/t,i=r*n*n+.9375):(n-=2.625/t,i=r*n*n+.984375),i}},function(){var t=Ext.fx.Easing.self,n=t.prototype;t.implement({"back-in":n.backIn,"back-out":n.backOut,"ease-in":n.easeIn,"ease-out":n.easeOut,"elastic-in":n.elasticIn,"elastic-out":n.elasticOut,"bounce-in":n.bounceIn,"bounce-out":n.bounceOut,"ease-in-out":n.easeInOut})})})