Ext.define("Ext.util.Sortable",{isSortable:!0,defaultSortDirection:"ASC",requires:["Ext.util.Sorter"],statics:{createComparator:function(n){return n&&n.length?function(t,i){for(var r=n[0].sort(t,i),f=n.length,u=1;u<f;u++)r=r||n[u].sort.call(this,t,i);return r}:function(){return 0}}},initSortable:function(){var n=this,t=n.sorters;n.sorters=new Ext.util.AbstractMixedCollection(!1,function(n){return n.id||n.property});t&&n.sorters.addAll(n.decodeSorters(t))},sort:function(n,t,i,r){var u=this,e,f;if(Ext.isArray(n)?(r=i,i=t,f=n):Ext.isObject(n)?(r=i,i=t,f=[n]):Ext.isString(n)&&(e=u.sorters.get(n),e?t===undefined?e.toggle():e.setDirection(t):(e={property:n,direction:t},f=[e])),f&&f.length&&(f=u.decodeSorters(f),Ext.isString(i)?i==="prepend"?u.sorters.insert(0,f):u.sorters.addAll(f):(u.sorters.clear(),u.sorters.addAll(f))),r!==!1){u.fireEvent("beforesort",u,f);u.onBeforeSort(f);n=u.sorters.items;n.length&&u.doSort(u.generateComparator())}return n},generateComparator:function(){var n=this.sorters.getRange();return n.length?this.createComparator(n):this.emptyComparator},emptyComparator:function(){return 0},onBeforeSort:Ext.emptyFn,decodeSorters:function(n){Ext.isArray(n)||(n=n===undefined?[]:[n]);for(var f=n.length,e=Ext.util.Sorter,u=this.model?this.model.prototype.fields:null,r,t,i=0;i<f;i++)t=n[i],t instanceof e||(Ext.isString(t)&&(t={property:t}),Ext.applyIf(t,{root:this.sortRoot,direction:"ASC"}),t.fn&&(t.sorterFn=t.fn),typeof t=="function"&&(t={sorterFn:t}),u&&!t.transform&&(r=u.get(t.property),t.transform=r&&r.sortType!==Ext.identityFn?r.sortType:undefined),n[i]=new Ext.util.Sorter(t));return n},getSorters:function(){return this.sorters.items},getFirstSorter:function(){for(var i=this.sorters.items,r=i.length,n=0,t;n<r;++n)if(t=i[n],!t.isGrouper)return t;return null}},function(){this.prototype.createComparator=this.createComparator})