Ext.define("Ext.util.LruCache",{extend:"Ext.util.HashMap",constructor:function(n){Ext.apply(this,n);this.callParent([n])},add:function(n,t){var i=this,u=i.findKey(t),r;return u?(i.unlinkEntry(r=i.map[u]),r.prev=i.last,r.next=null):r={prev:i.last,next:null,key:n,value:t},i.last?i.last.next=r:i.first=r,i.last=r,i.callParent([n,r]),i.prune(),t},insertBefore:function(n,t,i){var u=this,f,r;return(i=this.map[this.findKey(i)])?(f=u.findKey(t),f?u.unlinkEntry(r=u.map[f]):r={prev:i.prev,next:i,key:n,value:t},i.prev?r.prev.next=r:u.first=r,r.next=i,i.prev=r,u.prune(),t):u.add(n,t)},get:function(n){var t=this.map[n];if(t)return t.next&&this.moveToEnd(t),t.value},removeAtKey:function(n){return this.unlinkEntry(this.map[n]),this.callParent(arguments)},clear:function(){return this.first=this.last=null,this.callParent(arguments)},unlinkEntry:function(n){n&&(n.next?n.next.prev=n.prev:this.last=n.prev,n.prev?n.prev.next=n.next:this.first=n.next,n.prev=n.next=null)},moveToEnd:function(n){this.unlinkEntry(n);(n.prev=this.last)?this.last.next=n:this.first=n;this.last=n},getArray:function(n){for(var i=[],t=this.first;t;)i.push(n?t.key:t.value),t=t.next;return i},each:function(n,t,i){var u=this,r=i?u.last:u.first,f=u.length;for(t=t||u;r;){if(n.call(t,r.key,r.value,f)===!1)break;r=i?r.prev:r.next}return u},findKey:function(n){var t,i=this.map;for(t in i)if(i.hasOwnProperty(t)&&i[t].value===n)return t;return undefined},clone:function(){var n=new this.self(this.initialConfig),i=this.map,t;n.suspendEvents();for(t in i)i.hasOwnProperty(t)&&n.add(t,i[t].value);return n.resumeEvents(),n},prune:function(){var n=this,t=n.maxSize?n.length-n.maxSize:0;if(t>0)for(;n.first&&t;t--)n.removeAtKey(n.first.key)}})